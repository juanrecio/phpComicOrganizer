<?php

namespace ComicBundle\Repository;


use \Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr;

/**
 * ComicRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ComicRepository extends EntityRepository
{
    /**
     * @param array $filters
     * @return array
     */
    public function listComics(array $filters = [])
    {
        $alias = 'c';

        $qb = $this->createQueryBuilder($alias)->select($alias);

        if (isset($filters['libraryList'])) {

            $aliasLibraryList = 'll';
            $qb ->join("$alias.libraryLists", "$aliasLibraryList")
                ->andWhere($qb->expr()->eq("$aliasLibraryList.id", ':libraryList'))
                ->setParameter('libraryList', $filters['libraryList']);
        }

        if (isset($filters['toReadList'])) {

            $aliasToReadList = 'trl';
            $qb ->join("$alias.toReadLists", "$aliasToReadList")
                ->andWhere($qb->expr()->eq("$aliasToReadList.id", ':toReadList'))
                ->setParameter('toReadList', $filters['toReadList']);
        }

        if (isset($filters['readList'])) {

            $aliasReadList = 'rl';
            $qb ->join("$alias.readLists", "$aliasReadList")
                ->andWhere($qb->expr()->eq("$aliasReadList.id", ':readList'))
                ->setParameter('readList', $filters['readList']);
        }

        if (isset($filters['name'])) {

            $qb ->andWhere($qb->expr()->eq("$alias.name", ':name'))
                ->setParameter('name', $filters['name']);
        }


        return $qb->getQuery()->getResult();

    }
}
